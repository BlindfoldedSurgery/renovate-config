{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:recommended",
    "github>blindfoldedsurgery/renovate-config:pub",
    "github>blindfoldedsurgery/renovate-config:java",
    "github>blindfoldedsurgery/renovate-config:python"
  ],
  "rangeStrategy": "replace",
  "prHourlyLimit": 0,
  "automergeStrategy": "rebase",
  "separateMinorPatch": true,
  "lockFileMaintenance": {
    "enabled": true,
    "schedule": [
      "after 17:00 on friday"
    ],
    "automerge": true
  },
  "packageRules": [
    {
      "matchUpdateTypes": [
        "patch"
      ],
      "automerge": true
    },
    {
      "matchDepTypes": [
        "dev-dependencies",
        "dev_dependencies",
        "dev"
      ],
      "automerge": true
    },
    {
      "groupName": "Terraform",
      "description": "Group terraform asdf and terraform-internal updates",
      "matchDepNames": [
        "hashicorp/terraform",
        "terraform"
      ],
      "matchManagers": [
        "asdf",
        "github-actions",
        "terraform"
      ]
    },
    {
      "matchCategories": [
        "docker"
      ],
      "matchDepNames": [
        "swaggerapi/swagger-ui"
      ],
      "automerge": true
    },
    {
      "matchManagers": [
        "github-actions"
      ],
      "matchPackagePrefixes": [
        "docker/"
      ],
      "groupName": "GitHub Actions by Docker"
    },
    {
      "matchDepNames": [
        "postgres"
      ],
      "allowedVersions": "<= 15"
    },
    {
      "matchDepNames": [
        "helmfile"
      ],
      "matchPackagePrefixes": [
        "ghcr.io/helmfile/helmfile"
      ],
      "groupName": "Helmfile"
    }
  ],
  "customManagers": [
    {
      "customType": "regex",
      "datasourceTemplate": "pypi",
      "fileMatch": [
        "^\\.github/workflows/.+\\.ya?ml$",
        "Dockerfile"
      ],
      "matchStrings": [
        "pipx? install (?<depName>[_\\-a-zA-Z]+)==(?<currentValue>\\d+\\.\\d+\\.\\d+)"
      ]
    },
    {
      "customType": "regex",
      "fileMatch": [
        "^\\.github/workflows/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "renovate: datasource=(?<datasource>.+?) depName=(?<depName>.+?)(?: packageName=(?<packageName>.+?))?\\s[^:]+: ['\"]?(?<currentValue>.+?)['\"]?\\s"
      ]
    },
    {
      "customType": "regex",
      "fileMatch": [
        "^\\.github/workflows/.+\\.ya?ml$"
      ],
      "datasourceTemplate": "docker",
      "depNameTemplate": "python",
      "matchStrings": [
        "python-version: ['\"]?(?<currentValue>.+?)['\"]?\\s"
      ]
    },
    {
      "customType": "regex",
      "fileMatch": [
        "Dockerfile",
        "Containerfile"
      ],
      "datasourceTemplate": "docker",
      "depNameTemplate": "python",
      "matchStrings": [
        "FROM ghcr.io/blindfoldedsurgery/poetry:\\d+.\\d+.\\d+-[a-z]+-(?<currentValue>.+?)-[a-z]+\\s"
      ]
    },
    {
      "customType": "regex",
      "fileMatch": [
        "^\\.github/workflows/.+\\.ya?ml$"
      ],
      "datasourceTemplate": "docker",
      "depNameTemplate": "debian",
      "matchStrings": [
        "debian-version: ['\"]?(?<currentValue>.+?)['\"]?\\s"
      ]
    },
    {
      "customType": "regex",
      "fileMatch": [
        "Dockerfile",
        "Containerfile"
      ],
      "datasourceTemplate": "docker",
      "depNameTemplate": "debian",
      "matchStrings": [
        "FROM ghcr.io/blindfoldedsurgery/poetry:\\d+.\\d+.\\d+-[a-z]+-[^\\-]+-(?<currentValue>[a-z]+)\\s"
      ]
    },
    {
      "customType": "regex",
      "fileMatch": [
        "Dockerfile"
      ],
      "matchStrings": [
        "renovate: datasource=(?<datasource>.+?) depName=(?<depName>.+?)\\sENV [^\\s]+_VERSION=(?<currentValue>.+)\\s"
      ]
    },
    {
      "customType": "regex",
      "fileMatch": [
        "Dockerfile"
      ],
      "matchStrings": [
        "renovate: type=git-digest repo=(?<packageName>.+/(?<depName>[^/]+/[^/]+))\\sENV [A-Z_]+_VERSION=(?<currentDigest>.+)"
      ],
      "currentValueTemplate": "main",
      "datasourceTemplate": "git-refs"
    },
    {
      "customType": "regex",
      "fileMatch": [
        "values.yaml"
      ],
      "matchStrings": [
        "renovate: datasource=(?<datasource>.+?)\\s.+?: (?<depName>[^:]+):(?<currentValue>.+)\\s"
      ]
    }
  ]
}
